/**
 * ng-parse - Angular module to easily use Parse.com services in your app
 * @version v0.1.3
 * @link https://github.com/leonardfactory/ng-parse
 * @license MIT
 */
angular.module("ngParse",["angular-locker"]).service("NgParse",["NgParseObject","NgParseCollection","NgParseQuery","NgParseUser","NgParseRequest","NgParseDate","NgParseArray","NgParseRelation","ngParseRequestConfig","NgParseCloud",function(t,e,r,n,s,o,i,a,u,c){return{Object:t,Collection:e,Query:r,User:n,Request:s,Date:o,Array:i,Relation:a,Cloud:c,initialize:function(t,e){return u.appId=t,u.restApiKey=e,n.checkIfLogged()}}}]),angular.module("ngParse").factory("NgParseRelation",["NgParseObject","NgParseQuery","ngParseClassStore",function(t,e,r){var n;return n=function(){function n(e){var n,s,o;null==e&&(e={}),this.className=null!=(n=e.className)?n:"",this["class"]=null!=(s=null!=(o=e["class"])?o:r.getClass(this.className))?s:t,this.name=e.name,this.__parseOps__=[],this._parentObject=null}return n.prototype._normalizedObjectsArray=function(t){var e,r,n,s,o;for(r=t instanceof Array?t:[t],n=function(t){return function(e){var r;if(!(e instanceof t["class"]))throw new Error("Can't process in a Relation an object that isn't a "+(null!=(r=t["class"].className)?r:"NgParse.Object"));if(null==e.objectId)throw new Error("Can't process in a relation an object that has not an ObjectId (did you save it?)")}}(this),s=0,o=r.length;o>s;s++)e=r[s],n(e);return r},n.prototype.add=function(t){var e,r;if(this.__parseOps__.length>0)throw new Error("Currently can't perform more than one operation without a save on NgParse.Relation");return r=this._normalizedObjectsArray(t),this.__parseOps__.push({__op:"AddRelation",objects:function(){var t,n,s;for(s=[],t=0,n=r.length;n>t;t++)e=r[t],s.push(e._toPointer());return s}()})},n.prototype.remove=function(t){var e,r;if(this.__parseOps__.length>0)throw new Error("Currently can't perform more than one operation without a save on NgParse.Relation");return r=this._normalizedObjectsArray(t),this.__parseOps__.push({__op:"RemoveRelation",objects:function(){var t,n,s;for(s=[],t=0,n=r.length;n>t;t++)e=r[t],s.push(e._toPointer());return s}()})},n.prototype.query=function(){if(null==this._parentObject)throw new Error("Can't get a query if parentObject has not been set");return e.create({"class":this["class"]}).where.relatedTo(this.name,this._parentObject)},n.prototype._setObject=function(t){return this._parentObject=t},n.fromParseJSON=function(t,e){var r;if(null==t.__type||"Relation"!==t.__type)throw new Error("Cannot create a NgParse.Relation for a non-Relation attribute");return new this({className:null!=(r=t.className)?r:e.className,name:e.name})},n.prototype.toParseJSON=function(){return 0===this.__parseOps__.length?null:this.__parseOps__[0]},n.prototype.toPlainJSON=function(){throw new Error("NgParse.Relation actually can't be sent in a PlainObject format")},n.prototype._resetParseOps=function(){return this.__parseOps__=[]},n}()}]),angular.module("ngParse").factory("NgParseDate",function(){var t;return t=function(){function t(t){null==t&&(t={}),this.moment=t.iso?moment(t.iso,moment.ISO_8601):t.date?moment(t.date):t.moment?t.moment:moment(),this.__parseOps__=[]}return t.prototype.toParseJSON=function(){return{__type:"Date",iso:this.moment.format()}},t.prototype.toPlainJSON=function(){return this.toParseJSON()},t.fromParseJSON=function(t){var e;return null!=t?new this({iso:null!=(e=t.iso)?e:t}):null},Object.defineProperties(t.prototype,{date:{get:function(){return this.moment.toDate()}}}),t}()});var __hasProp={}.hasOwnProperty,__extends=function(t,e){function r(){this.constructor=t}for(var n in e)__hasProp.call(e,n)&&(t[n]=e[n]);return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};angular.module("ngParse").factory("NgParseArray",function(){var t;return t=function(t){function e(t){var r;return null==t&&(t={}),r=null!=t.array?_.clone(t.array):[],r.__parseOps__=[],r.__proto__=e.prototype,r}return __extends(e,t),e.prototype.op=function(t,e){var r;if(r=e instanceof Array?e:[e],0!==this.__parseOps__.length){if(this.__parseOps__[0].__op!==t)throw new Error("NgParse Actually doesn't support multiple ops with a different type");return this.__parseOps__[0].objects.push.apply(this.__parseOps__[0].objects,r)}return this.__parseOps__.push({__op:t,objects:r})},e.prototype.push=function(){return this.op("Add",Array.prototype.slice.call(arguments)),Array.prototype.push.apply(this,arguments)},e.prototype.pushAll=function(t){return this.op("Add",t),Array.prototype.push.apply(this,t)},e.prototype.remove=function(t){return this.op("Remove",Array.prototype.slice.call(arguments)),this.splice(this.indexOf(t),1)},e.prototype.toParseJSON=function(){return 0===this.__parseOps__.length?null:this.__parseOps__[0]},e.prototype.toPlainJSON=function(){var t,e,r,n;for(t=[],r=0,n=this.length;n>r;r++)e=this[r],t.push(e);return t},e.fromParseJSON=function(t){var e;return e=new this({array:t})},e.prototype._resetParseOps=function(){return this.__parseOps__=[]},e}(Array)});var __hasProp={}.hasOwnProperty;angular.module("ngParse").factory("NgParseACL",function(){var t;return t=function(){function t(t){var e,r,n;if(null==t&&(t={}),this.permissions={},null!=t.acl){n=t.acl;for(e in n)__hasProp.call(n,e)&&(r=n[e],this.permissions[e]={},r.write&&(this.permissions[e].write=r.write),r.read&&(this.permissions[e].read=r.read))}this.__parseOps__=[],this._currentKey=null}return t.prototype.user=function(t){return this._currentKey=null!=t.objectId?t.objectId:t,this},Object.defineProperty(t.prototype,"public",{get:function(){return this._currentKey="*",this}}),t.prototype._setChanged=function(){return 0===this.__parseOps__.length&&this.__parseOps__.push("change"),null==this.permissions[this._currentKey]?this.permissions[this._currentKey]={}:void 0},t.prototype._checkKey=function(t,e){return e||delete this.permissions[this._currentKey][t],0===_.size(this.permissions[this._currentKey])&&delete this.permissions[this._currentKey],null},t.prototype.write=function(t){return this._setChanged(),this.permissions[this._currentKey].write=t,this._checkKey("write",t),this},t.prototype.read=function(t){return this._setChanged(),this.permissions[this._currentKey].read=t,this._checkKey("read",t),this},t.prototype.allow=function(t,e){return this._setChanged(),this.permissions[this._currentKey].read=t,this.permissions[this._currentKey].write=e,this._checkKey("read",t),this._checkKey("write",e),this},t.fromParseJSON=function(t){return new this({acl:t})},t.prototype.toParseJSON=function(){return 0===this.__parseOps__.length?null:_.clone(this.permissions)},t.prototype.toPlainJSON=function(){return this.toParseJSON()},t.prototype._resetParseOps=function(){return this.__parseOps__=[]},t}()}),angular.module("ngParse").factory("NgParseQuery",["$q","NgParseObject","NgParseRequest","ngParseClassStore",function(t,e,r){var n;return n=function(){function n(t){if(null==t&&(t={}),null==t["class"])throw new Error("Can't instantiate a query without a `class`");this["class"]=t["class"],this._constraints={}}var s;return n.create=function(t){return null==t&&(t={}),new this(t)},n.prototype.find=function(){var e,n;return n=new r({method:"GET",type:r.Type.Query,params:this._toParams(),className:this["class"].className}),e=t.defer(),n.perform().success(function(t){return function(r){var n,s;return n=function(){var t,e,n,o;for(n=r.results,o=[],t=0,e=n.length;e>t;t++)s=n[t],o.push(function(t){return function(e){var r;return r=t["class"].get({id:e.objectId}),r._updateWithAttributes(e),r}}(this)(s));return o}.call(t),e.resolve(n)}}(this)).error(function(){return function(t){return e.reject(t)}}(this)),e.promise},n.prototype.first=function(){var e,n;return n=new r({method:"GET",type:r.Type.Query,params:this._toParams(!0),className:this["class"].className}),e=t.defer(),n.perform().success(function(t){return function(r){var n,s;return 0===r.results.length?e.resolve(null):(s=r.results[0],n=t["class"].get({id:s.objectId}),n._updateWithAttributes(s),e.resolve(n))}}(this)).error(function(){return function(t){return e.reject(t)}}(this)),e.promise},n.prototype._toParams=function(t){var e;return null==t&&(t=!1),e=null,_.size(this._constraints)>0&&(e=_.clone(this._constraints),null!=this._orWhereConstraints&&(_.size(this._constraints.where)&&(this._orWhereConstraints.push(_.clone(this._constraints.where)),this._constraints.where={}),e.where={$or:this._orWhereConstraints})),t&&(e=null!=e?e:{},e.limit=1),e},s=null,Object.defineProperties(n.prototype,{where:{get:function(){var t;return this._constraints.where=null!=(t=this._constraints.where)?t:{},this}},and:{get:function(){return this}},or:{get:function(){var t;return this._orWhereConstraints=null!=(t=this._orWhereConstraints)?t:[],this._orWhereConstraints.push(_.clone(this._constraints.where)),this._constraints.where={},this._currentAttr=null,this}}}),n.prototype.attr=function(t){return this._currentAttr=t,this},n.prototype._getAttr=function(t,e,r){var n,s;if(null==r&&(r=!1),n=null!=e?t:this._currentAttr,s=null!=e?e:t,null==n)throw new Error("Can't operate on a not-set attribute");return r&&null==this._constraints.where[n]&&(this._constraints.where[n]={}),[n,s]},n.prototype._addWhereConstraint=function(t,e,r){var n,s;return s=this._getAttr(t,e,!0),n=s[0],e=s[1],this._constraints.where[n][r]=e,this},n.prototype.exist=function(t){var e;if(e=null!=t?t:this._currentAttr,null==e)throw new Error("Can't operate on a not-set attribute");return null==this._constraints.where[e]&&(this._constraints.where[e]={}),this._constraints.where[e].$exists=!0,this},n.prototype.equal=function(t,e){var r,n;return n=this._getAttr(t,e),r=n[0],e=n[1],this._constraints.where[r]=e,this},n.prototype.notEqual=function(t,e){return this._addWhereConstraint(t,e,"$ne")},n.prototype.containedIn=function(t,e){return this._addWhereConstraint(t,e,"$in")},n.prototype.notContainedIn=function(t,e){return this._addWhereConstraint(t,e,"$nin")},n.prototype.lessThan=function(t,e){return this._addWhereConstraint(t,e,"$lt")},n.prototype.lessThanEqual=function(t,e){return this._addWhereConstraint(t,e,"$lte")},n.prototype.greaterThan=function(t,e){return this._addWhereConstraint(t,e,"$gt")},n.prototype.greaterThanEqual=function(t,e){return this._addWhereConstraint(t,e,"$gte")},n.prototype.contains=function(t,e){var r,n;return n=this._getAttr(t,e,!0),r=n[0],e=n[1],this._constraints.where[r]=e,this},n.prototype.containsAll=function(t,e){return this._addWhereConstraint(t,e,"$all")},n.prototype.equalObject=function(t,r){var n,s;if(s=this._getAttr(t,r),n=s[0],r=s[1],!(r instanceof e))throw new Error("`equalObject` comparator can be used only with `NgParseObject` instances");return this._constraints.where[n]=r._toPointer(),this},n.prototype.matchQuery=function(t,e){var r,s;if(s=this._getAttr(t,e),r=s[0],e=s[1],!(e instanceof n))throw new Error("`matchQuery` comparator can be used only with `NgParseQuery` instances");return this._constraints.where[r]=e._toParams(),this},n.prototype.relatedTo=function(t,r){if("string"!=typeof t)throw new Error("Key should be a string relative to the parent object");if(!(r instanceof e))throw new Error("`relatedTo` should be called on a a `NgParseObject`");return this._constraints.where.$relatedTo={object:r._toPointer(),key:t},this},n.prototype.limit=function(t){return this._constraints.limit=t,this},n.prototype.skip=function(t){return this._constraints.skip=t,this},n.prototype.order=function(t){return this._constraints.order=t,this},n}()}]),angular.module("ngParse").factory("ngParseCollectionStore",function(){var t;return new(t=function(){function t(){this._collections={}}return t.prototype.put=function(t,e){return null!=this._collections[t]&&console.log("ngParseCollectionStore: Warning: key: '"+t+"' is yet present in the collection store."),this._collections[t]=e},t.prototype.has=function(t){return null!=this._collections[t]},t.prototype.get=function(t){return this._collections[t]},t}())}),angular.module("ngParse").factory("ngParseClassStore",function(){var t;return new(t=function(){function t(){this._classes={}}return t.prototype.registerClass=function(t,e){var r;return r=null!=this._classes[t],this._classes[t]=e,r},t.prototype.getClass=function(t){var e;if(e=this._classes[t],null==e)throw new Error("className '"+t+"' not registered in the NgParseClassStore. Are you sure you extended NgParseObject and called `@registerForClassName`?");return e},t}())});var __hasProp={}.hasOwnProperty,__extends=function(t,e){function r(){this.constructor=t}for(var n in e)__hasProp.call(e,n)&&(t[n]=e[n]);return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};angular.module("ngParse").factory("NgParseUser",["$q","NgParseObject","NgParseRequest","ngParseRequestConfig","ngParseClassStore","locker",function(t,e,r,n,s,o){var i;return i=function(e){function i(t){null==t&&(t={}),i.__super__.constructor.call(this,t)}return __extends(i,e),i.registerForClassName("_User"),i.defineAttributes(["username","password","email"]),i.prototype.__sessionToken__=null,Object.defineProperty(i.prototype,"_sessionToken",{get:function(){return this.__sessionToken__},set:function(t){return this.__sessionToken__=t,n.sessionToken=t}}),i.current=null,i.logged=function(){return null!=this.current},i.login=function(e,n){var s,o;return o=new r({method:"GET",url:"login",type:r.Type.Other,params:{username:e,password:n}}),s=t.defer(),o.perform().success(function(t){return function(e){var r;return r=t.get({id:e.objectId}),r._updateWithAttributes(e),r._sessionToken=e.sessionToken,t.current=r,t._storageSave(),s.resolve(r)}}(this)).error(function(t){return s.reject(t)}),s.promise},i.prototype.signup=function(){var e,r;return(null!=(e=this.username)?e.length:void 0)&&(null!=(r=this.password)?r.length:void 0)?this.save(!0).then(function(t){return function(e){var r;return r=e[e.length-1],t._sessionToken=r.sessionToken,t.constructor.current=t,t.constructor._storageSave(),t}}(this)):t.reject("Can't register without username and password set")},i.logout=function(){return this.current._sessionToken=null,this.current=null,this._storageDelete()},i.prototype.me=function(){var e,n;return n=new r({method:"GET",url:"users/me",type:r.Type.Other}),e=t.defer(),n.perform().success(function(t){return function(r){return t._updateWithAttributes(r),null!=r.sessionToken&&(t._sessionToken=r.sessionToken),e.resolve(t)}}(this)).error(function(){return function(t){return e.reject(t)}}(this)),e.promise},i.checkIfLogged=function(){var t,e,r;return o.driver("local").namespace("ngParse").has("currentUser")?(e=o.driver("local").namespace("ngParse").get("currentUser"),r=s.getClass("_User"),t=r.get({id:e.objectId}),t._sessionToken=e.sessionToken,r.current=t,r.current.me()["catch"](function(t){return function(e){return 101===e.code?t.logout():void 0}}(this))):void 0},i._storageSave=function(){return o.driver("local").namespace("ngParse").put("currentUser",{sessionToken:this.current._sessionToken,objectId:this.current.objectId})},i._storageDelete=function(){return o.driver("local").namespace("ngParse").forget("currentUser")},i}(e)}]),angular.module("ngParse").factory("ngParseStore",["$q",function(){var t;return new(t=function(){function t(){this._models=[]}return t.prototype.hasModel=function(t,e){return this._models[t]&&this._models[t].hasOwnProperty(e)?this._models[t][e]:null},t.prototype.updateModel=function(t){var e,r;return null==this._models[t.className]&&(this._models[t.className]={}),e=this._models[t.className],r=e.hasOwnProperty(t.id),e[t.id]=t,r},t.prototype.removeModel=function(t,e){return null!=this._models[t]&&null!=this._models[t][e]?this._models[t][e]=null:void 0},t}())}]),angular.module("ngParse").service("ngParseRequestConfig",function(){return{parseUrl:"https://api.parse.com/1/",appId:"",restApiKey:"",sessionToken:null}}).factory("NgParseRequest",["$q","$http","ngParseRequestConfig",function(t,e,r){var n;return n=function(){function t(t){var e,n,s;if(this.method=null!=(e=t.method)?e:"GET",this.type=t.type,"POST"!==this.method&&this.type===this.constructor.Type.Resource&&!t.hasOwnProperty("objectId"))throw new Error("Can't fetch a resource without an `objectId` specified in the options");if("POST"===this.method&&this.type===this.constructor.Type.Resource&&(null==t.data||t.data.hasOwnProperty("objectId")))throw new Error("Can't create a new object without passing `data` option, or if data has an `objectId`");if("GET"!==this.method&&this.type===this.constructor.Type.Query)throw new Error("Can't process a query with a method different from GET");if("POST"!==this.method&&this.type===this.constructor.Type.Cloud)throw new Error("Can't run a Cloud Code function with a method different from POST");if(this.type===this.constructor.Type.Resource||this.type===this.constructor.Type.Query){if(null==t.className)throw new Error("Can't create a NgParseRequest for a `Resource` or a `Query` without specifying a `className`");this.url="_User"===t.className?"users/":"classes/"+t.className+"/","POST"!==t.method&&this.type===this.constructor.Type.Resource&&(this.url=""+this.url+t.objectId)}else if(this.type===this.constructor.Type.Cloud){if(null==t.functionName)throw new Error("Can't create a NgParseRequest for a CloudCode functon without specifying a `functionName`");this.url="functions/"+t.functionName}else{if(this.type!==this.constructor.Type.Other)throw new Error("`options.type` not recognized. It should be one of NgParseRequest.Type");if(null==t.url)throw new Error("Can't create a NgParseRequest with type `Other` without specifying `url` in options");this.url=t.url}this.httpConfig={method:this.method,url:r.parseUrl+this.url,headers:{"X-Parse-Application-Id":r.appId,"X-Parse-REST-API-Key":r.restApiKey},params:"GET"===this.method&&null!=(n=t.params)?n:null,data:"GET"!==this.method&&null!=(s=t.data)?s:null},null!=r.sessionToken&&(this.httpConfig.headers["X-Parse-Session-Token"]=r.sessionToken)}return t.Type={Cloud:0,Resource:1,Query:2,Other:3},t.create=function(t){return new this(t)},t.prototype.perform=function(){return e(this.httpConfig)},t}()}]);var __indexOf=[].indexOf||function(t){for(var e=0,r=this.length;r>e;e++)if(e in this&&this[e]===t)return e;return-1};angular.module("ngParse").factory("NgParseObject",["$q","ngParseStore","ngParseClassStore","NgParseRequest","NgParseDate","NgParseACL",function(t,e,r,n,s,o){var i;return i=function(){function i(t){var r,n,s,o,i;for(null==t&&(t={}),this.className=this.constructor.className,this.attributes={},i=this.constructor.totalAttrNames,n=function(e){return function(r){var n,s;return n=null!=r.name?r.name:r,s=null==r.type||__indexOf.call(e.constructor.reservedAttrNames,n)>=0||t.hasOwnProperty(n)?t.hasOwnProperty(n)?t[n]:null:new r.type(r),null!=(null!=s?s._setObject:void 0)&&s._setObject(e),null!=s?e.attributes[n]=s:void 0}}(this),s=0,o=i.length;o>s;s++)r=i[s],n(r);this.dirty=[],null!=this.objectId&&e.updateModel(this)}return i.className="",i.attrNames=[{name:"createdAt",type:s},{name:"updatedAt",type:s},{name:"ACL",type:o},"objectId"],i.totalAttrNames=[],i.reservedAttrNames=["createdAt","updatedAt","objectId"],i.defineAttributes=function(t){var e,r,n,s;for(this.totalAttrNames=_.clone(this.totalAttrNames),this.totalAttrNames.push.apply(this.totalAttrNames,t),s=[],r=0,n=t.length;n>r;r++)e=t[r],s.push(function(t){return function(e){var r;if(null!=e.name!=(null!=e.type))throw new Error("An attribute specified with a name should have a value and vice-versa");return r=null!=e.name?e.name:e,Object.defineProperty(t.prototype,r,{get:function(){return this.attributes[r]},set:function(t){return this.dirty.push(r),this.attributes[r]=t}})}}(this)(e));return s},i.defineAttributes(i.attrNames),i.registerForClassName=function(t){return this.className=t,r.registerClass(t,this)},i.prototype._updateWithAttributes=function(t){var r,n,s,o,i,a;for(null==t&&(t={}),n=this.isNew,a=this.constructor.totalAttrNames,s=function(e){return function(r){var n,s,o,i;if(n=null!=(s=r.name)?s:r,t.hasOwnProperty(n)){if("string"==typeof r)return e.attributes[n]=null!=(o=t[n])?o:null;if(e.attributes[n]=r.type.fromParseJSON(t[n],r),null!=(null!=(i=e.attributes[n])?i._setObject:void 0))return e.attributes[n]._setObject(e)}}}(this),o=0,i=a.length;i>o;o++)r=a[o],s(r);return!this.isNew&&n?e.updateModel(this):void 0},i.prototype._toParseJSON=function(t){var e,r,n,s,o,i,a;for(null==t&&(t=!1),n={},r=t?"toPlainJSON":"toParseJSON",a=this.constructor.totalAttrNames,s=function(t){return function(e){var s,o,i,a,u;return s=null!=(a=e.name)?a:e,o=__indexOf.call(t.dirty,s)>=0||null!=e.type&&null!=t.attributes[s]&&t.attributes[s].__parseOps__.length>0,__indexOf.call(t.constructor.reservedAttrNames,s)>=0||!o||(i="string"==typeof e?null!=(u=t.attributes[s])?u:null:null!=t.attributes[s]?t.attributes[s][r]():null,null==i)?void 0:n[s]=i}}(this),o=0,i=a.length;i>o;o++)e=a[o],s(e);return n},i.prototype._toPlainJSON=function(){return this._toParseJSON(!0)},i.prototype._toPointer=function(){return{__type:"Pointer",className:this.className,objectId:this.objectId}},i.prototype._resetOps=function(){var t,e,r,n,s;for(this.dirty=[],n=this.constructor.totalAttrNames,s=[],e=0,r=n.length;r>e;e++)t=n[e],s.push(function(t){return function(e){var r;return"string"!=typeof e&&null!=t.attributes[e.name]&&"function"==typeof(r=t.attributes[e.name])._resetParseOps?r._resetParseOps():void 0}}(this)(t));return s},i.prototype.fetch=function(){var e,r;if(!this.objectId)throw new Error("Unable to fetch an NgParseObject without an id provided. Class: "+this.className);return r=new n({objectId:this.objectId,className:this.className,method:"GET",type:n.Type.Resource}),e=t.defer(),r.perform().success(function(t){return function(r){return t._updateWithAttributes(r),e.resolve(t)}}(this)).error(function(){return function(t){return e.reject(t)}}(this)),e.promise},i.prototype.save=function(e){var r,s;return null==e&&(e=!1),s=new n(this.isNew?{className:this.className,method:"POST",data:this._toParseJSON(),type:n.Type.Resource}:{objectId:this.objectId,className:this.className,data:this._toParseJSON(),method:"PUT",type:n.Type.Resource}),r=t.defer(),s.perform().success(function(t){return function(n){return t._updateWithAttributes(n),t._resetOps(),r.resolve(e?[t,n]:t)}}(this)).error(function(){return function(t){return r.reject(t)}}(this)),r.promise},i.prototype["delete"]=function(){var r,s;if(this.isNew)throw new Error("Can't delete an object that has not been saved. Class: "+this.className);return s=new n({objectId:this.objectId,className:this.className,method:"DELETE",type:n.Type.Resource}),r=t.defer(),s.perform().success(function(t){return function(){return e.removeModel(t.className,t.objectId),r.resolve(t)}}(this)).error(function(t){return function(){return r.reject(t)}}(this)),r.promise},i.get=function(t){var r,n;if(null==t&&(t={}),null==t.id&&null==t.objectId)throw new Error("Unable to retrieve an NgParseObject without an id");return n=null!=t.id?t.id:t.objectId,(r=e.hasModel(this.className,n))?r:new this({objectId:n})},Object.defineProperties(i.prototype,{id:{get:function(){return this.objectId},set:function(t){return this.objectId=t}},isNew:{get:function(){return null==this.objectId}}}),i}()}]);var __indexOf=[].indexOf||function(t){for(var e=0,r=this.length;r>e;e++)if(e in this&&this[e]===t)return e;return-1};angular.module("ngParse").factory("NgParseCollection",["$q","NgParseObject","NgParseQuery","ngParseCollectionStore",function(t,e,r,n){var s;return s=function(){function s(t){var s,o,i;null==t&&(t={}),this["class"]=null!=(o=t["class"])?o:e,this.query=null!=(i=t.query)?i:new r({"class":this["class"]}),this.models=[],this._lastUpdate=null,s=this.constructor.hash(t),null!=s&&n.put(s,this)}return s.collectionName="",s.prototype.contains=function(t){if(!(t instanceof this["class"]))throw new Error("Can't add a non NgParseObject to a Collection.");return _.some(this.models,function(e){return e.id===t.id})},s.prototype.add=function(t){var e,r,n,s;if(!(t instanceof this["class"]))throw new Error("Can't add a non NgParseObject to a Collection.");if(t.isNew)throw new Error("Can't add a NgParseObject that is not saved to Collection");for(s=this.models,r=0,n=s.length;n>r;r++)if(e=s[r],e.id===t.id)throw new Error("Object with id "+t.id+" is already contained in this Collection");return this.models.push(t)},s.prototype.remove=function(t){var e,r,n,s,o,i;if(!(t instanceof this["class"]||"string"==typeof t))throw new Error("Can't remove a non NgParseObject from a Collection.");if(t instanceof this["class"]&&__indexOf.call(this.models,t)>=0)return this.models.splice(this.models.indexOf(t),1);if("string"==typeof t){for(o=this.models,i=[],e=n=0,s=o.length;s>n;e=++n)r=o[e],r.id===t&&i.push(this.models.splice(e,1));return i}},s.prototype.fetch=function(){var e;if(null==this.query)throw new Error("Can't fetch Collection without a query");if(!(this.query instanceof r))throw new Error("Can't fetch Collection without using a `NgParseQuery` object");return this._rollbackLastUpdate=this._lastUpdate,this._lastUpdate=new Date,e=t.defer(),this.query.find().then(function(t){return function(r){var n,s,o;for(t.models=[],s=0,o=r.length;o>s;s++)n=r[s],t.models.push(n);return e.resolve(r)}}(this))["catch"](function(t){return function(r){return t._lastUpdate=t._rollbackLastUpdate,e.reject(r)}}(this)),e.promise},s.prototype.update=function(){var e,r;return r=new Date,null==this._lastUpdate?this.fetch():(e=Math.round((r.getTime()-this._lastUpdate.getTime())/1e3/60),e>1?this.fetch():t.when(this.models))},s.hash=function(t){return null==t&&(t={}),null},s.get=function(t){var e,r;return null==t&&(t={}),r=this.hash(t),n.has(r)?n.get(r):e=new this(t)},s}()}]),angular.module("ngParse").factory("NgParseCloud",["$q","NgParseRequest","NgParseObject","ngParseClassStore",function(t,e,r,n){var s;return s=function(){function s(){}return s.parse=function(t){var e,r,s,o;return null!=(null!=(s=t.result)?s.className:void 0)&&null!=(null!=(o=t.result)?o.objectId:void 0)?(r=n.getClass(t.result.className),e=r.get({objectId:t.result.objectId}),e._updateWithAttributes(t.result),e._resetOps(),e):t},s.run=function(n,s,o){var i,a,u;if(null==o&&(o=!1),o&&!(s instanceof r))throw new Error("Can't save an object that is not an instance of NgParse.Object");return u=new e({method:"POST",type:e.Type.Cloud,functionName:n,data:o?s._toPlainJSON():s}),a=function(t){return function(e){var r;return o?(s._updateWithAttributes(e.result),i.resolve(s)):(r=t.parse(e),i.resolve(r))}}(this),i=t.defer(),u.perform().success(a).error(function(){return function(t){return i.reject(t)}}(this)),i.promise},s}()}]);